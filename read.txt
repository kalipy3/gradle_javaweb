read.txt

:Author: kalipy
:Email: kalipy@debian
:Date: 2020-10-06 13:39

1.jsp编译后的.class和源文件.java在tomcat的work文件夹下

2.jsp运行原理：
    index.jsp被tomcat翻译成index_jsp.java,tomcat把它编译为index_jsp.class

    HttpJspBase继承HttpServlet,所以index_jsp就是一个Servlet

    每次请求都调用_jspService()

3.jsp基本语法：
    html
    jsp脚本片段     <% %>
    jsp表达式       <%=new Date() %>
    jsp声明         <%! int i = 0 %>    其它方法、成员变量、静态代码块

4.注释：
                            jsp源文件   .java文件   返回的html页面
    <%-- jsp注释 --%>       可见        不可见      不可见
    <!-- html注释 -->       可见        可见        可见
    //java注释              可见        可见        不可见

5.jsp指令：
    不直接产生任何输出，只是告诉引擎如何处理jsp页面的其余内容

    <%@指令名 属性名=属性值 %>
        page指令：定义页面如何被解析
        include指令：静态包含
        taglib指令：在页面引入标签库

    page指令属性：
        import:导入java包
        pageEncoding:指定字符集
        contentType:设置响应头
        errorPage:指定发生错误去向的页面
        session:缺省session="true",当前页面是否参与会话，即是否可以使用session对象
        isELIgnored:是否忽略el表达式，默认false
        info:定义页面的描述信息

6.include指令：静态包含
    <%@ 指令名 属性名=属性值%>
    <%@ include 属性名=属性值%>
    把另一个页面包含进来,它采用的方式是把整个页面复制到service方法里面。
    jsp引擎不翻译和编译要包含的页面

7.jsp标签：jsp内置了很多标签
    <jsp:include>:也是在页面包含另一个页面 动态包含
    它不是把整个页面复制过来，再一行行的写出去
    org.apache.jasper.runtime.JspRuntimeLibrary.include(request,response,"250.jsp",out,false);//test2_jsp.java






8.jsp九大隐含对象：
       见img文件夹

       隐含对象：在页面上可以直接使用的对象

       四大域对象：用来在其它资源共享数据
   

9.四大域对象:
    PageContext pageContext = null; 代表当前页面对象
        1.获取其它隐含对象 pageContext.getXX()

        2.作为域对象共享数据，只能当前页面共享。
            String key, Object value
            通过调用域对象.setAttribute(key,value),给相应的域中设置内容
            域对象.getAttribute(key)获取域中的内容

    HttpServletRequest request;
        1.在同一个请求对象中共享数据，必须同一次请求

    HttpSession session = null;代表会话对象
        1.同一次会话共享数据 浏览器打开-开始会话  浏览器关闭-结束会话
        不同的浏览器不同会话 不同web应用不同会话

    ServletContext application = null;代表整个web应用
        1.application代表当前web应用
        web应用只要不卸载(tomcat不重启)都可以访问

    
    域对象      作用范围        开始时间        结束时间
    pageContext 当前jsp页面     页面加载        离开页面
    request     同一个请求      收到请求        响应
    session     同一个会话      开始会话        结束会话
    application 当前web应用     web应用被加载   web应用被卸载
