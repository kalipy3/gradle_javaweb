<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <context-param>
        <param-name>user</param-name>
        <param-value>kalipy</param-value>
    </context-param>

    <servlet>
        <servlet-name>LoginServlet</servlet-name>
        <servlet-class>com.servlet.LoginServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>LoginServlet</servlet-name>
        <url-pattern>/user/LoginServlet</url-pattern>
    </servlet-mapping>

    <!-- 配置filter类信息 -->
    <filter>
        <!-- filter起的别名 -->
        <filter-name>HelloFilter</filter-name>
        <!-- filter的全类名 -->
        <filter-class>com.filter.HelloFilter</filter-class>
    </filter>
    <!-- 配置filter的映射信息 -->
    <filter-mapping>
        <!-- 指定filter -->
        <filter-name>HelloFilter</filter-name>
        <!-- 过滤哪些请求 表示访问hello.jsp的时候会被过滤器拦截 -->
        <url-pattern>/hello.jsp</url-pattern>    
    </filter-mapping>
    
    <filter>
        <filter-name>Bfilter</filter-name>
        <filter-class>com.filter.Bfilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Bfilter</filter-name>
        <url-pattern>/test.jsp</url-pattern> 
        <!--
        dispatcher
            FORWARD:拦截转发过来的
            INCLUDE:拦截包含的
            REQUEST:直接请求的,直接请求这个地址会被拦截
            ERROR:发生错误的
        -->
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>Afilter</filter-name>
        <filter-class>com.filter.Afilter</filter-class>
        <init-param>
            <param-name>username</param-name>
            <param-value>root</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>Afilter</filter-name>
        <!-- url-pattern servlet也可以使用
            1.精确匹配
                写要拦截的资源的详细路径 /hello.jsp  /page/a.jsp

            2.路径匹配 /路径名/* *代表所有
                拦截所有访问(路径名)下的资源
            
            3.后缀名匹配
                所有给定的后缀都拦截
        -->
        <url-pattern>/a.jsp</url-pattern>    
    </filter-mapping>
    
    <servlet>
        <servlet-name>TestServlet</servlet-name>
        <servlet-class>com.filter.TestServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>TestServlet</servlet-name>
        <url-pattern>/TestServlet</url-pattern>
    </servlet-mapping>
    
</web-app>
